import { StateManager } from "../../../lib/StateManager.lib.avt";
import { PressManager } from "../../../lib/PressManager.lib.avt";
import { DefaultComponent, WebComponent } from "../../../lib/WebComponent.lib.avt";

export class AvRouterLink extends WebComponent implements DefaultComponent {

    //#region static

    //#endregion


    //#region props
    @Attribute()
    public state: string = "";

    /**
     * If set define when active class is added otherwhise class active is added when state define is active
     */
    @Attribute()
    public active_state: string = "";
    //#endregion


    //#region variables

    //#endregion


    //#region states

    //#endregion


    //#region constructor

    //#endregion


    //#region methods
    protected override postCreation(): void {
        let activeState = this.state;
        if(this.active_state) {
            activeState = this.active_state;
        }
        StateManager.getInstance("navigation").subscribe(activeState, {
            active: () => {
                this.classList.add("active");
            },
            inactive: () => {
                this.classList.remove("active");
            }
        });
        new PressManager({
            element: this,
            onPress: () => {
                StateManager.getInstance("navigation").setActiveState(this.state);
            }
        });
    }
    //#endregion

}